#[derive(Debug)]
pub enum Opcode {
    MovConst,
    Mov,
    Add,
    AddConst,
    Call,
    Ret,
    PauseThread,
    Jmp,
    SetSetVect,
    Jnz,
    CondJmp,
    SetPalette,
    ResetThread,
    SelectVideoPage,
    FillVideoPage,
    CopyVideoPage,
    BlitFrameBuffer,
    KillThread,
    DrawString,
    Sub,
    And,
    Or,
    Shl,
    Shr,
    PlaySound,
    UpdateMemList,
    PlayMusic,
    DrawPolySprite(u8),
    DrawPolyBackground(u8),
}

impl Opcode {
    pub fn decode(val: u8) -> Opcode {
        match val {
            0x00 => Opcode::MovConst,
            0x01 => Opcode::Mov,
            0x02 => Opcode::Add,
            0x03 => Opcode::AddConst,
            0x04 => Opcode::Call,
            0x05 => Opcode::Ret,
            0x06 => Opcode::PauseThread,
            0x07 => Opcode::Jmp,
            0x08 => Opcode::SetSetVect,
            0x09 => Opcode::Jnz,
            0x0a => Opcode::CondJmp,
            0x0b => Opcode::SetPalette,
            0x0c => Opcode::ResetThread,
            0x0d => Opcode::SelectVideoPage,
            0x0e => Opcode::FillVideoPage,
            0x0f => Opcode::CopyVideoPage,
            0x10 => Opcode::BlitFrameBuffer,
            0x11 => Opcode::KillThread,
            0x12 => Opcode::DrawString,
            0x13 => Opcode::Sub,
            0x14 => Opcode::And,
            0x15 => Opcode::Or,
            0x16 => Opcode::Shl,
            0x17 => Opcode::Shr,
            0x18 => Opcode::PlaySound,
            0x19 => Opcode::UpdateMemList,
            0x1a => Opcode::PlayMusic,
            0x1b..=0x3f => unimplemented!("Illegal opcode: 0x{:x}", val),
            0x40..=0x7f => Opcode::DrawPolySprite(val),
            0x80..=0xff => Opcode::DrawPolyBackground(val),
        }
    }
}
